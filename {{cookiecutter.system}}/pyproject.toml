[project]
name = "{{ cookiecutter.system }}"
version = "0.1.0"
description = "{{ cookiecutter.descr }}"
requires-python = ">=3.13"
dependencies = [
  "fastapi>=0.104.0",
  "uvicorn[standard]>=0.24.0",
  "psycopg[binary]>=3.1.0",
  "redis>=5.0.0",
  "pydantic>=2.5.0",
  "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
  "ruff>=0.1.0",
  "mypy>=1.7.0",
  "pytest>=7.4.0",
  "pytest-cov>=4.1.0",
  "pytest-asyncio>=0.21.0",
  "pre-commit>=3.5.0",
  "types-redis>=4.6.0",
]

[build-system]
requires      = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
  "ruff>=0.1.0",
  "mypy>=1.7.0",
  "pytest>=7.4.0",
  "pytest-cov>=4.1.0",
  "pytest-asyncio>=0.21.0",
  "pre-commit>=3.5.0",
  "types-redis>=4.6.0",
]

[tool.ruff]
line-length    = 88
target-version = "py313"
src            = ["src", "tests"]

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "UP",  # pyupgrade
  "D",   # pydocstyle
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
]
ignore = [
  "E501", # Line too long (handled by formatter)
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style                = "double"
indent-width               = 4
docstring-code-format      = true
docstring-code-line-length = 72

[tool.mypy]
python_version        = "3.12"
strict                = true
warn_return_any       = true
warn_unused_configs   = true
disallow_untyped_defs = true
disallow_any_generics = true
show_error_codes      = true
exclude               = ["build/", "dist/"]

[[tool.mypy.overrides]]
module                 = ["redis.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "--strict-markers",
  "--strict-config",
  "--cov=src",
  "--cov-report=html:htmlcov",
  "--cov-report=term-missing",
  "--cov-fail-under=80",
  "-ra",
]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
  "*/tests/*",
  "*/test_*",
  "*/__pycache__/*",
  "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
